// Generated by view binder compiler. Do not edit!
package com.example.my_first_app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.my_first_app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout bluetoothStatusLayout;

  @NonNull
  public final TextView bluetoothStatusText;

  @NonNull
  public final TextView connectionStatusText;

  @NonNull
  public final LinearLayout controlButtonsLayout;

  @NonNull
  public final TextView deviceListHeader;

  @NonNull
  public final RecyclerView devicesRecyclerView;

  @NonNull
  public final LinearLayout headerLayout;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final Button scanButton;

  @NonNull
  public final TextView scanStatusText;

  @NonNull
  public final ConstraintLayout scanningContainer;

  @NonNull
  public final Button skipConnectionButton;

  @NonNull
  public final View spinningArc;

  @NonNull
  public final Button stopScanButton;

  private ActivityMainBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout bluetoothStatusLayout, @NonNull TextView bluetoothStatusText,
      @NonNull TextView connectionStatusText, @NonNull LinearLayout controlButtonsLayout,
      @NonNull TextView deviceListHeader, @NonNull RecyclerView devicesRecyclerView,
      @NonNull LinearLayout headerLayout, @NonNull ProgressBar progressBar,
      @NonNull Button scanButton, @NonNull TextView scanStatusText,
      @NonNull ConstraintLayout scanningContainer, @NonNull Button skipConnectionButton,
      @NonNull View spinningArc, @NonNull Button stopScanButton) {
    this.rootView = rootView;
    this.bluetoothStatusLayout = bluetoothStatusLayout;
    this.bluetoothStatusText = bluetoothStatusText;
    this.connectionStatusText = connectionStatusText;
    this.controlButtonsLayout = controlButtonsLayout;
    this.deviceListHeader = deviceListHeader;
    this.devicesRecyclerView = devicesRecyclerView;
    this.headerLayout = headerLayout;
    this.progressBar = progressBar;
    this.scanButton = scanButton;
    this.scanStatusText = scanStatusText;
    this.scanningContainer = scanningContainer;
    this.skipConnectionButton = skipConnectionButton;
    this.spinningArc = spinningArc;
    this.stopScanButton = stopScanButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bluetoothStatusLayout;
      LinearLayout bluetoothStatusLayout = ViewBindings.findChildViewById(rootView, id);
      if (bluetoothStatusLayout == null) {
        break missingId;
      }

      id = R.id.bluetoothStatusText;
      TextView bluetoothStatusText = ViewBindings.findChildViewById(rootView, id);
      if (bluetoothStatusText == null) {
        break missingId;
      }

      id = R.id.connectionStatusText;
      TextView connectionStatusText = ViewBindings.findChildViewById(rootView, id);
      if (connectionStatusText == null) {
        break missingId;
      }

      id = R.id.controlButtonsLayout;
      LinearLayout controlButtonsLayout = ViewBindings.findChildViewById(rootView, id);
      if (controlButtonsLayout == null) {
        break missingId;
      }

      id = R.id.deviceListHeader;
      TextView deviceListHeader = ViewBindings.findChildViewById(rootView, id);
      if (deviceListHeader == null) {
        break missingId;
      }

      id = R.id.devicesRecyclerView;
      RecyclerView devicesRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (devicesRecyclerView == null) {
        break missingId;
      }

      id = R.id.headerLayout;
      LinearLayout headerLayout = ViewBindings.findChildViewById(rootView, id);
      if (headerLayout == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.scanButton;
      Button scanButton = ViewBindings.findChildViewById(rootView, id);
      if (scanButton == null) {
        break missingId;
      }

      id = R.id.scanStatusText;
      TextView scanStatusText = ViewBindings.findChildViewById(rootView, id);
      if (scanStatusText == null) {
        break missingId;
      }

      id = R.id.scanningContainer;
      ConstraintLayout scanningContainer = ViewBindings.findChildViewById(rootView, id);
      if (scanningContainer == null) {
        break missingId;
      }

      id = R.id.skipConnectionButton;
      Button skipConnectionButton = ViewBindings.findChildViewById(rootView, id);
      if (skipConnectionButton == null) {
        break missingId;
      }

      id = R.id.spinningArc;
      View spinningArc = ViewBindings.findChildViewById(rootView, id);
      if (spinningArc == null) {
        break missingId;
      }

      id = R.id.stopScanButton;
      Button stopScanButton = ViewBindings.findChildViewById(rootView, id);
      if (stopScanButton == null) {
        break missingId;
      }

      return new ActivityMainBinding((ConstraintLayout) rootView, bluetoothStatusLayout,
          bluetoothStatusText, connectionStatusText, controlButtonsLayout, deviceListHeader,
          devicesRecyclerView, headerLayout, progressBar, scanButton, scanStatusText,
          scanningContainer, skipConnectionButton, spinningArc, stopScanButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
